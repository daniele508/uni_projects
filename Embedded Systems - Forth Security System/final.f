HEX

\Indirizzo di base
3F200000  CONSTANT BASE
3F003000  CONSTANT TIMER_BASE


\Indirizzo dei registri utilizzati
BASE      CONSTANT GPFSEL0
BASE 4 +  CONSTANT  GPFSEL1
BASE 8 +  CONSTANT  GPFSEL2
BASE 1C + CONSTANT  GPSET0
BASE 28 + CONSTANT  GPCLR0
BASE 34 + CONSTANT  GPLEV0

TIMER_BASE 04 + CONSTANT TIMER_CLO

1 CONSTANT OUTPUT

\Word di utilità
: ABS DUP 0< IF NEGATE THEN ;
: BTST AND 0<> ;

: ON  GPSET0 ! ;
: OFF  GPCLR0 ! ;

: READ_TIME TIMER_CLO @ ;         
: DELAY READ_TIME + BEGIN DUP  READ_TIME - 0< UNTIL DROP ;

: 1/8_SEC 1E848 DELAY ;
: 1/2_SEC  7A120 DELAY ;
: 1_SEC   F4240 DELAY ;


DECIMAL


: MASK  DECIMAL SWAP 10 MOD DUP 0> IF BEGIN SWAP 3 LSHIFT SWAP 1 - DUP 0= UNTIL THEN DROP ;
: OUT OUTPUT MASK ;
: SELECT  DUP ROT SWAP @ OR SWAP ! ; 


\Impostazione dei GPIO in modalità output
: GPIO0_OUT  0  OUT GPFSEL0 SELECT ;
: GPIO5_OUT  5  OUT GPFSEL0 SELECT ;
: GPIO6_OUT  6  OUT GPFSEL0 SELECT ;
: GPIO9_OUT  9  OUT GPFSEL0 SELECT ;
: GPIO10_OUT 10 OUT GPFSEL1 SELECT ;
: GPIO11_OUT 11 OUT GPFSEL1 SELECT ;
: GPIO13_OUT 13 OUT GPFSEL1 SELECT ;
: GPIO22_OUT 22 OUT GPFSEL2 SELECT ;
: GPIO23_OUT 23 OUT GPFSEL2 SELECT ;
: GPIO24_OUT 24 OUT GPFSEL2 SELECT ;

\Setting componenti di output
: LCD_SET GPIO0_OUT GPIO5_OUT GPIO6_OUT GPIO9_OUT GPIO11_OUT GPIO13_OUT ;
: BUZZER_SET GPIO10_OUT ;
: TRIG_SET GPIO22_OUT ;
: LED_SET  GPIO23_OUT GPIO24_OUT ;

LED_SET TRIG_SET BUZZER_SET LCD_SET

HEX

\Costanti per maschere di output
800000  CONSTANT GREEN
1000000 CONSTANT RED
400     CONSTANT BUZZER
400000  CONSTANT TRIGGER
800     CONSTANT EN
200     CONSTANT RS
1       CONSTANT DB4
20      CONSTANT DB5
40      CONSTANT DB6
2000    CONSTANT DB7

\Costanti per maschere di input
20000    CONSTANT MOV_MASK
2000000  CONSTANT BUTTON_MASK
8000000  CONSTANT ECHO_MASK
100      CONSTANT IR_MASK
00FF0000 CONSTANT MASK_TASTO
 


\Leggere pin per input
: READ_PIN  DUP GPLEV0 @ AND = ;

\Setting sensore distanza
VARIABLE TIME

0 TIME !

: TRIG  TRIGGER ON  A DELAY TRIGGER OFF ;
: WAIT_UP BEGIN ECHO_MASK READ_PIN UNTIL ;
: ECHO_TIME WAIT_UP READ_TIME BEGIN ECHO_MASK READ_PIN NOT UNTIL READ_TIME SWAP - ;

: SET_TIME TRIG ECHO_TIME TIME ! ; 

\Scansione dei sensori
: SCAN_DIST TRIG ECHO_TIME TIME @ - ABS 20 >  ;
: SCAN_MOV  MOV_MASK READ_PIN ;
: SCAN_BUTTON  BUTTON_MASK READ_PIN ;


\Setting LCD
: MOD_INSTR RS OFF ;
: MOD_DATA RS ON ;

: CLEAR DB4 OFF DB5 OFF DB6 OFF DB7 OFF ;
: SWITCH SWAP IF ON ELSE OFF THEN ;

: SET_DB CLEAR  DUP 80 BTST DB7 SWITCH  DUP 40 BTST DB6 SWITCH
                DUP 20 BTST DB5 SWITCH      10 BTST DB4 SWITCH ;

: WRITE DUP EN ON          SET_DB EN OFF 
            EN ON 4 LSHIFT SET_DB EN OFF  ;

: SETUP_LCD MOD_INSTR 2 WRITE 28 WRITE C WRITE MOD_DATA ;   \2 return home  
                                                            \28 attiva seconda linea 
                                                            \C cancella il cursore

SETUP_LCD


\Caratteri utilizzati in LCD
: '!' 21 WRITE ;
: '0' 30 WRITE ;
: '1' 31 WRITE ;
: '2' 32 WRITE ;
: '3' 33 WRITE ;
: '4' 34 WRITE ;
: '5' 35 WRITE ;
: '6' 36 WRITE ;
: '7' 37 WRITE ;
: '8' 38 WRITE ;
: '9' 39 WRITE ;
: 'A' 41 WRITE ;
: 'B' 42 WRITE ;
: 'C' 43 WRITE ;
: 'D' 44 WRITE ;
: 'E' 45 WRITE ;
: 'F' 46 WRITE ;
: 'G' 47 WRITE ;
: 'H' 48 WRITE ;
: 'I' 49 WRITE ;
: 'J' 4A WRITE ;
: 'K' 4B WRITE ;
: 'L' 4C WRITE ;
: 'M' 4D WRITE ;
: 'N' 4E WRITE ;
: 'O' 4F WRITE ;
: 'P' 50 WRITE ;
: 'Q' 51 WRITE ;
: 'R' 52 WRITE ;
: 'S' 53 WRITE ;
: 'T' 54 WRITE ;
: 'U' 55 WRITE ;
: 'V' 56 WRITE ;
: 'W' 57 WRITE ;
: 'X' 58 WRITE ;
: 'Y' 59 WRITE ;
: 'Z' 5A WRITE ;
: _ MOD_INSTR 14 WRITE MOD_DATA ;
: LEFT MOD_INSTR 10 WRITE MOD_DATA ;

\Parole utilizzate in LCD
: ALLARME 'A' 'L' 'L' 'A' 'R' 'M' 'E' ;
: ATTIVO 'A' 'T' 'T' 'I' 'V' 'O' ;
: DISATTIVO 'D' 'I' 'S' 'A' 'T' 'T' 'I' 'V' 'O' ;
: INTRUSIONE 'I' 'N' 'T' 'R' 'U' 'S' 'I' 'O' 'N' 'E' ;
: IN 'I' 'N' ;
: CORSO 'C' 'O' 'R' 'S' 'O' '!' ;
: INGRESSO 'I' 'N' 'G' 'R' 'E' 'S' 'S' 'O' ;
: MOVIMENTO 'M' 'O' 'V' 'I' 'M' 'E' 'N' 'T' 'O' ;
: INSERISCI 'I' 'N' 'S' 'E' 'R' 'I' 'S' 'C' 'I'  ;
: PIN 'P' 'I' 'N' ;
: CORRETTO 'C' 'O' 'R' 'R' 'E' 'T' 'T' 'O' ;
: ERRATO 'E' 'R' 'R' 'A' 'T' 'O' ;
: ATTIVAZIONE 'A' 'T' 'T' 'I' 'V' 'A' 'Z' 'I' 'O' 'N' 'E' ;

\Word utilità LCD
: CLEAR_DISPLAY  MOD_INSTR 1 WRITE MOD_DATA 1/8_SEC ;
: NL 28 SWAP - BEGIN _ 1 - DUP 0= UNTIL DROP ;
: CANC LEFT  20 WRITE LEFT  ;
: CL BEGIN CANC 1 - DUP 0= UNTIL DROP ;
: COUNTDOWN 39 BEGIN GREEN ON BUZZER ON DUP 1/2_SEC GREEN OFF BUZZER OFF WRITE 1/2_SEC 1 CL 1 - DUP 2F = UNTIL DROP ;

\Setting IR
VARIABLE TASTO

: INIT_TASTO 0 TASTO ! ;
: MEASURE_TIME READ_TIME BEGIN IR_MASK READ_PIN NOT UNTIL READ_TIME SWAP - ;
: RANGE DUP 100 > SWAP DUP  300 < ROT = IF DROP 0  ELSE  DUP 400 > SWAP DUP 750 < ROT = IF DROP 1  THEN  THEN ;

: SET_TASTO TASTO @ 1 LSHIFT + TASTO ! ;
: FIND_INPUT DUP 0= SWAP DUP 1 = ROT OR IF SET_TASTO MASK_TASTO DUP TASTO @ AND = ELSE DROP 0 THEN ;

: TASTO_IR INIT_TASTO BEGIN MEASURE_TIME RANGE FIND_INPUT 32 DELAY UNTIL ;

\Tasti utilizzati
: TASTO_0 00FF6897 = IF '0' THEN ;
: TASTO_1 00FF30CF = IF '1' THEN ;
: TASTO_2 00FF18E7 = IF '2' THEN ;
: TASTO_3 00FF7A85 = IF '3' THEN ;
: TASTO_4 00FF10EF = IF '4' THEN ;
: TASTO_5 00FF38C7 = IF '5' THEN ;
: TASTO_6 00FF5AA5 = IF '6' THEN ;
: TASTO_7 00FF455D = IF '7' THEN ;
: TASTO_8 00FF4AD5 = IF '8' THEN ;
: TASTO_9 00FF52AD = IF '9' THEN ;


VARIABLE FLAG_MOV
VARIABLE FLAG_INGR

\Word stampe
: PRINT_INGR DUP FLAG_INGR @ <> IF DUP -1 = IF INGRESSO ELSE 8 CL THEN THEN DUP FLAG_INGR ! ;
: PRINT_MOV DUP FLAG_MOV @ <> IF DUP -1 = IF MOVIMENTO ELSE 9 CL THEN THEN DUP FLAG_MOV ! ;
: PRINT_PRESS DUP TASTO_0 DUP TASTO_1 DUP TASTO_2 DUP TASTO_3 DUP TASTO_4 DUP TASTO_5 DUP TASTO_6 DUP TASTO_7 DUP TASTO_8 TASTO_9 ;


\Controllo password
VARIABLE FLAG_PASS
CREATE PASSWORD 00FF30CF , 00FF18E7 , 00FF7A85 , 00FF10EF , 00FF38C7 ,

: SET_FLAG_PASS FLAG_PASS ! ;
: SCAN_PSW CELLS PASSWORD +  @ =   ;

: INSERISCI_PASS -1 SET_FLAG_PASS 0 BEGIN DUP TASTO_IR TASTO @ DUP PRINT_PRESS SWAP SCAN_PSW NOT IF 0 SET_FLAG_PASS THEN  1 + DUP 5 = UNTIL DROP ;


\Esecuzione a stati
VARIABLE FLAG_EXIT
VARIABLE STATE



: STATE_0 \ ALLARME DISATTIVO
    GREEN ON

    CLEAR_DISPLAY 
    ALLARME 7 NL DISATTIVO

    BEGIN
        1/8_SEC
        SCAN_BUTTON
    UNTIL
    CLEAR_DISPLAY
    ATTIVAZIONE B NL 

    COUNTDOWN
    1 STATE !
;

: STATE_1 \ALLARME ATTIV0
    0 FLAG_EXIT !
    0 FLAG_MOV !
    0 FLAG_INGR !

    SET_TIME
    RED ON

    CLEAR_DISPLAY
    ALLARME _ ATTIVO E NL

    BEGIN 
        1/8_SEC
        
        SCAN_MOV PRINT_MOV
        SCAN_DIST PRINT_INGR 

        + ABS 2 = IF
            -1 FLAG_EXIT ! 
            2 STATE ! 
        THEN

        SCAN_BUTTON IF 
            -1 FLAG_EXIT ! 
            3 STATE ! 
        THEN

        FLAG_EXIT @
    UNTIL

    RED OFF
;

: STATE_2 \ALLARME IN CORSO
    0 FLAG_EXIT !

    CLEAR_DISPLAY
    INTRUSIONE A NL IN _ CORSO

    BEGIN
        1/8_SEC

        RED ON
        BUZZER ON

        SCAN_BUTTON IF 
            -1 FLAG_EXIT ! 
        THEN

        1/8_SEC

        RED OFF
        BUZZER OFF

        SCAN_BUTTON IF 
            -1 FLAG_EXIT !
        THEN

        FLAG_EXIT @
    UNTIL

    3 STATE !
;

: STATE_3 \INSERISCI PASSWORD
    RED ON
    
    CLEAR_DISPLAY
    INSERISCI _ PIN D NL

    INSERISCI_PASS 
    1_SEC

    FLAG_PASS @ IF 
        CLEAR_DISPLAY
        PIN _ CORRETTO 
        1_SEC
        0 STATE ! 
    ELSE 
        CLEAR_DISPLAY 
        PIN _ ERRATO 
        1_SEC
        2 STATE !
    THEN

    RED OFF
;

: START 
    SET_TIME
    0 STATE !
    BEGIN 
        STATE @ 
        DUP .

        DUP 0 = IF STATE_0 ELSE 
        DUP 1 = IF STATE_1 ELSE 
        2 = IF STATE_2 ELSE 
        STATE_3
        THEN THEN THEN DROP
        
        0
    UNTIL
;

START
